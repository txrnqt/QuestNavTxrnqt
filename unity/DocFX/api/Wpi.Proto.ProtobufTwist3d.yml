### YamlMime:ManagedReference
items:
- uid: Wpi.Proto.ProtobufTwist3d
  commentId: T:Wpi.Proto.ProtobufTwist3d
  id: ProtobufTwist3d
  parent: Wpi.Proto
  children:
  - Wpi.Proto.ProtobufTwist3d.#ctor
  - Wpi.Proto.ProtobufTwist3d.#ctor(Wpi.Proto.ProtobufTwist3d)
  - Wpi.Proto.ProtobufTwist3d.CalculateSize
  - Wpi.Proto.ProtobufTwist3d.Clone
  - Wpi.Proto.ProtobufTwist3d.Descriptor
  - Wpi.Proto.ProtobufTwist3d.Dx
  - Wpi.Proto.ProtobufTwist3d.DxFieldNumber
  - Wpi.Proto.ProtobufTwist3d.Dy
  - Wpi.Proto.ProtobufTwist3d.DyFieldNumber
  - Wpi.Proto.ProtobufTwist3d.Dz
  - Wpi.Proto.ProtobufTwist3d.DzFieldNumber
  - Wpi.Proto.ProtobufTwist3d.Equals(System.Object)
  - Wpi.Proto.ProtobufTwist3d.Equals(Wpi.Proto.ProtobufTwist3d)
  - Wpi.Proto.ProtobufTwist3d.GetHashCode
  - Wpi.Proto.ProtobufTwist3d.MergeFrom(Google.Protobuf.CodedInputStream)
  - Wpi.Proto.ProtobufTwist3d.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  - Wpi.Proto.ProtobufTwist3d.Parser
  - Wpi.Proto.ProtobufTwist3d.Rx
  - Wpi.Proto.ProtobufTwist3d.RxFieldNumber
  - Wpi.Proto.ProtobufTwist3d.Ry
  - Wpi.Proto.ProtobufTwist3d.RyFieldNumber
  - Wpi.Proto.ProtobufTwist3d.Rz
  - Wpi.Proto.ProtobufTwist3d.RzFieldNumber
  - Wpi.Proto.ProtobufTwist3d.ToString
  - Wpi.Proto.ProtobufTwist3d.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: ProtobufTwist3d
  nameWithType: ProtobufTwist3d
  fullName: Wpi.Proto.ProtobufTwist3d
  type: Class
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: ProtobufTwist3d
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1574
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Represents a 3D twist (velocity in 3D space).

     This message encodes the instantaneous velocity of an object in 3D space,
     including both linear and angular velocity components. It describes how
     an object's 3D pose is changing over time, extending the 2D twist concept
     into three dimensions.

     Mathematical Interpretation:
     The twist represents the time derivative of 3D pose:
     - Linear velocity: (dx/dt, dy/dt, dz/dt)
     - Angular velocity: (rx, ry, rz) as rotation rates about each axis

     Applications:
     - 3D robot velocity commands (drones, robotic arms)
     - 3D velocity feedback from odometry systems
     - Velocity constraints in 3D path planning
     - Dynamic modeling and simulation in 3D
     - IMU angular velocity data representation
     - Camera motion estimation

     Coordinate Frame:
     The twist can be expressed in different coordinate frames (body-relative
     or world-relative) depending on the application context. The angular
     velocity components represent rotation rates about the coordinate axes.
  example: []
  syntax:
    content: 'public sealed class ProtobufTwist3d : IMessage<ProtobufTwist3d>, IEquatable<ProtobufTwist3d>, IDeepCloneable<ProtobufTwist3d>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class ProtobufTwist3d Implements IMessage(Of ProtobufTwist3d), IEquatable(Of ProtobufTwist3d), IDeepCloneable(Of ProtobufTwist3d), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}
  - System.IEquatable{Wpi.Proto.ProtobufTwist3d}
  - Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Wpi.Proto.ProtobufTwist3d.Parser
  commentId: P:Wpi.Proto.ProtobufTwist3d.Parser
  id: Parser
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ProtobufTwist3d.Parser
  fullName: Wpi.Proto.ProtobufTwist3d.Parser
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Parser
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1581
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  syntax:
    content: public static MessageParser<ProtobufTwist3d> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Wpi.Proto.ProtobufTwist3d}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of ProtobufTwist3d)
  overload: Wpi.Proto.ProtobufTwist3d.Parser*
- uid: Wpi.Proto.ProtobufTwist3d.Descriptor
  commentId: P:Wpi.Proto.ProtobufTwist3d.Descriptor
  id: Descriptor
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ProtobufTwist3d.Descriptor
  fullName: Wpi.Proto.ProtobufTwist3d.Descriptor
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Descriptor
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1585
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Wpi.Proto.ProtobufTwist3d.Descriptor*
- uid: Wpi.Proto.ProtobufTwist3d.#ctor
  commentId: M:Wpi.Proto.ProtobufTwist3d.#ctor
  id: '#ctor'
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: ProtobufTwist3d()
  nameWithType: ProtobufTwist3d.ProtobufTwist3d()
  fullName: Wpi.Proto.ProtobufTwist3d.ProtobufTwist3d()
  type: Constructor
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: .ctor
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1597
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  syntax:
    content: public ProtobufTwist3d()
    content.vb: Public Sub New()
  overload: Wpi.Proto.ProtobufTwist3d.#ctor*
  nameWithType.vb: ProtobufTwist3d.New()
  fullName.vb: Wpi.Proto.ProtobufTwist3d.New()
  name.vb: New()
- uid: Wpi.Proto.ProtobufTwist3d.#ctor(Wpi.Proto.ProtobufTwist3d)
  commentId: M:Wpi.Proto.ProtobufTwist3d.#ctor(Wpi.Proto.ProtobufTwist3d)
  id: '#ctor(Wpi.Proto.ProtobufTwist3d)'
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: ProtobufTwist3d(ProtobufTwist3d)
  nameWithType: ProtobufTwist3d.ProtobufTwist3d(ProtobufTwist3d)
  fullName: Wpi.Proto.ProtobufTwist3d.ProtobufTwist3d(Wpi.Proto.ProtobufTwist3d)
  type: Constructor
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: .ctor
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1605
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  syntax:
    content: public ProtobufTwist3d(ProtobufTwist3d other)
    parameters:
    - id: other
      type: Wpi.Proto.ProtobufTwist3d
    content.vb: Public Sub New(other As ProtobufTwist3d)
  overload: Wpi.Proto.ProtobufTwist3d.#ctor*
  nameWithType.vb: ProtobufTwist3d.New(ProtobufTwist3d)
  fullName.vb: Wpi.Proto.ProtobufTwist3d.New(Wpi.Proto.ProtobufTwist3d)
  name.vb: New(ProtobufTwist3d)
- uid: Wpi.Proto.ProtobufTwist3d.Clone
  commentId: M:Wpi.Proto.ProtobufTwist3d.Clone
  id: Clone
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ProtobufTwist3d.Clone()
  fullName: Wpi.Proto.ProtobufTwist3d.Clone()
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Clone
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1617
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public ProtobufTwist3d Clone()
    return:
      type: Wpi.Proto.ProtobufTwist3d
    content.vb: Public Function Clone() As ProtobufTwist3d
  overload: Wpi.Proto.ProtobufTwist3d.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}.Clone
- uid: Wpi.Proto.ProtobufTwist3d.DxFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.DxFieldNumber
  id: DxFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: DxFieldNumber
  nameWithType: ProtobufTwist3d.DxFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.DxFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: DxFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1624
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "dx" field.
  example: []
  syntax:
    content: public const int DxFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const DxFieldNumber As Integer = 1
- uid: Wpi.Proto.ProtobufTwist3d.Dx
  commentId: P:Wpi.Proto.ProtobufTwist3d.Dx
  id: Dx
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Dx
  nameWithType: ProtobufTwist3d.Dx
  fullName: Wpi.Proto.ProtobufTwist3d.Dx
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Dx
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1637
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Linear velocity in X direction.

     Rate of change of X position over time. In world coordinates,
     this represents forward/backward velocity.

     Positive values: Moving in positive X direction (forward)
     Negative values: Moving in negative X direction (backward)
     Units: meters per second
  example: []
  syntax:
    content: public double Dx { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Dx As Double
  overload: Wpi.Proto.ProtobufTwist3d.Dx*
- uid: Wpi.Proto.ProtobufTwist3d.DyFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.DyFieldNumber
  id: DyFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: DyFieldNumber
  nameWithType: ProtobufTwist3d.DyFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.DyFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: DyFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1647
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "dy" field.
  example: []
  syntax:
    content: public const int DyFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const DyFieldNumber As Integer = 2
- uid: Wpi.Proto.ProtobufTwist3d.Dy
  commentId: P:Wpi.Proto.ProtobufTwist3d.Dy
  id: Dy
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Dy
  nameWithType: ProtobufTwist3d.Dy
  fullName: Wpi.Proto.ProtobufTwist3d.Dy
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Dy
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1660
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Linear velocity in Y direction.

     Rate of change of Y position over time. In world coordinates,
     this represents left/right velocity (strafing).

     Positive values: Moving in positive Y direction (left)
     Negative values: Moving in negative Y direction (right)
     Units: meters per second
  example: []
  syntax:
    content: public double Dy { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Dy As Double
  overload: Wpi.Proto.ProtobufTwist3d.Dy*
- uid: Wpi.Proto.ProtobufTwist3d.DzFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.DzFieldNumber
  id: DzFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: DzFieldNumber
  nameWithType: ProtobufTwist3d.DzFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.DzFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: DzFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1670
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "dz" field.
  example: []
  syntax:
    content: public const int DzFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const DzFieldNumber As Integer = 3
- uid: Wpi.Proto.ProtobufTwist3d.Dz
  commentId: P:Wpi.Proto.ProtobufTwist3d.Dz
  id: Dz
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Dz
  nameWithType: ProtobufTwist3d.Dz
  fullName: Wpi.Proto.ProtobufTwist3d.Dz
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Dz
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1683
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Linear velocity in Z direction.

     Rate of change of Z position over time. In world coordinates,
     this represents up/down velocity (climbing/descending).

     Positive values: Moving in positive Z direction (up)
     Negative values: Moving in negative Z direction (down)
     Units: meters per second
  example: []
  syntax:
    content: public double Dz { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Dz As Double
  overload: Wpi.Proto.ProtobufTwist3d.Dz*
- uid: Wpi.Proto.ProtobufTwist3d.RxFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.RxFieldNumber
  id: RxFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: RxFieldNumber
  nameWithType: ProtobufTwist3d.RxFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.RxFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: RxFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1693
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "rx" field.
  example: []
  syntax:
    content: public const int RxFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const RxFieldNumber As Integer = 4
- uid: Wpi.Proto.ProtobufTwist3d.Rx
  commentId: P:Wpi.Proto.ProtobufTwist3d.Rx
  id: Rx
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Rx
  nameWithType: ProtobufTwist3d.Rx
  fullName: Wpi.Proto.ProtobufTwist3d.Rx
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Rx
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1706
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Angular velocity about X-axis (roll rate).

     Rate of rotation about the X-axis. This represents how fast
     the object is rolling (rotating around its forward axis).

     Positive values: Counter-clockwise rotation when looking down the positive X-axis
     Negative values: Clockwise rotation when looking down the positive X-axis
     Units: radians per second
  example: []
  syntax:
    content: public double Rx { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Rx As Double
  overload: Wpi.Proto.ProtobufTwist3d.Rx*
- uid: Wpi.Proto.ProtobufTwist3d.RyFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.RyFieldNumber
  id: RyFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: RyFieldNumber
  nameWithType: ProtobufTwist3d.RyFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.RyFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: RyFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1716
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "ry" field.
  example: []
  syntax:
    content: public const int RyFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const RyFieldNumber As Integer = 5
- uid: Wpi.Proto.ProtobufTwist3d.Ry
  commentId: P:Wpi.Proto.ProtobufTwist3d.Ry
  id: Ry
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Ry
  nameWithType: ProtobufTwist3d.Ry
  fullName: Wpi.Proto.ProtobufTwist3d.Ry
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Ry
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1729
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Angular velocity about Y-axis (pitch rate).

     Rate of rotation about the Y-axis. This represents how fast
     the object is pitching (nose up/down motion).

     Positive values: Counter-clockwise rotation when looking down the positive Y-axis
     Negative values: Clockwise rotation when looking down the positive Y-axis
     Units: radians per second
  example: []
  syntax:
    content: public double Ry { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Ry As Double
  overload: Wpi.Proto.ProtobufTwist3d.Ry*
- uid: Wpi.Proto.ProtobufTwist3d.RzFieldNumber
  commentId: F:Wpi.Proto.ProtobufTwist3d.RzFieldNumber
  id: RzFieldNumber
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: RzFieldNumber
  nameWithType: ProtobufTwist3d.RzFieldNumber
  fullName: Wpi.Proto.ProtobufTwist3d.RzFieldNumber
  type: Field
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: RzFieldNumber
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1739
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: Field number for the "rz" field.
  example: []
  syntax:
    content: public const int RzFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const RzFieldNumber As Integer = 6
- uid: Wpi.Proto.ProtobufTwist3d.Rz
  commentId: P:Wpi.Proto.ProtobufTwist3d.Rz
  id: Rz
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Rz
  nameWithType: ProtobufTwist3d.Rz
  fullName: Wpi.Proto.ProtobufTwist3d.Rz
  type: Property
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Rz
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1752
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  summary: >-
    *
     Angular velocity about Z-axis (yaw rate).

     Rate of rotation about the Z-axis. This represents how fast
     the object is yawing (turning left/right).

     Positive values: Counter-clockwise rotation when looking down the positive Z-axis
     Negative values: Clockwise rotation when looking down the positive Z-axis
     Units: radians per second
  example: []
  syntax:
    content: public double Rz { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Rz As Double
  overload: Wpi.Proto.ProtobufTwist3d.Rz*
- uid: Wpi.Proto.ProtobufTwist3d.Equals(System.Object)
  commentId: M:Wpi.Proto.ProtobufTwist3d.Equals(System.Object)
  id: Equals(System.Object)
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ProtobufTwist3d.Equals(object)
  fullName: Wpi.Proto.ProtobufTwist3d.Equals(object)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Equals
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1761
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Wpi.Proto.ProtobufTwist3d.Equals*
  nameWithType.vb: ProtobufTwist3d.Equals(Object)
  fullName.vb: Wpi.Proto.ProtobufTwist3d.Equals(Object)
  name.vb: Equals(Object)
- uid: Wpi.Proto.ProtobufTwist3d.Equals(Wpi.Proto.ProtobufTwist3d)
  commentId: M:Wpi.Proto.ProtobufTwist3d.Equals(Wpi.Proto.ProtobufTwist3d)
  id: Equals(Wpi.Proto.ProtobufTwist3d)
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: Equals(ProtobufTwist3d)
  nameWithType: ProtobufTwist3d.Equals(ProtobufTwist3d)
  fullName: Wpi.Proto.ProtobufTwist3d.Equals(Wpi.Proto.ProtobufTwist3d)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Equals
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1767
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public bool Equals(ProtobufTwist3d other)
    parameters:
    - id: other
      type: Wpi.Proto.ProtobufTwist3d
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ProtobufTwist3d) As Boolean
  overload: Wpi.Proto.ProtobufTwist3d.Equals*
  implements:
  - System.IEquatable{Wpi.Proto.ProtobufTwist3d}.Equals(Wpi.Proto.ProtobufTwist3d)
- uid: Wpi.Proto.ProtobufTwist3d.GetHashCode
  commentId: M:Wpi.Proto.ProtobufTwist3d.GetHashCode
  id: GetHashCode
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProtobufTwist3d.GetHashCode()
  fullName: Wpi.Proto.ProtobufTwist3d.GetHashCode()
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: GetHashCode
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1785
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Wpi.Proto.ProtobufTwist3d.GetHashCode*
- uid: Wpi.Proto.ProtobufTwist3d.ToString
  commentId: M:Wpi.Proto.ProtobufTwist3d.ToString
  id: ToString
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ProtobufTwist3d.ToString()
  fullName: Wpi.Proto.ProtobufTwist3d.ToString()
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: ToString
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1801
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Wpi.Proto.ProtobufTwist3d.ToString*
- uid: Wpi.Proto.ProtobufTwist3d.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Wpi.Proto.ProtobufTwist3d.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: ProtobufTwist3d.WriteTo(CodedOutputStream)
  fullName: Wpi.Proto.ProtobufTwist3d.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: WriteTo
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1807
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Wpi.Proto.ProtobufTwist3d.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: Wpi.Proto.ProtobufTwist3d.CalculateSize
  commentId: M:Wpi.Proto.ProtobufTwist3d.CalculateSize
  id: CalculateSize
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ProtobufTwist3d.CalculateSize()
  fullName: Wpi.Proto.ProtobufTwist3d.CalculateSize()
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: CalculateSize
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1877
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize() As Integer
  overload: Wpi.Proto.ProtobufTwist3d.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: Wpi.Proto.ProtobufTwist3d.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  commentId: M:Wpi.Proto.ProtobufTwist3d.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  id: MergeFrom(Wpi.Proto.ProtobufTwist3d)
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: MergeFrom(ProtobufTwist3d)
  nameWithType: ProtobufTwist3d.MergeFrom(ProtobufTwist3d)
  fullName: Wpi.Proto.ProtobufTwist3d.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: MergeFrom
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1905
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public void MergeFrom(ProtobufTwist3d other)
    parameters:
    - id: other
      type: Wpi.Proto.ProtobufTwist3d
    content.vb: Public Sub MergeFrom(other As ProtobufTwist3d)
  overload: Wpi.Proto.ProtobufTwist3d.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}.MergeFrom(Wpi.Proto.ProtobufTwist3d)
- uid: Wpi.Proto.ProtobufTwist3d.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Wpi.Proto.ProtobufTwist3d.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Wpi.Proto.ProtobufTwist3d
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: ProtobufTwist3d.MergeFrom(CodedInputStream)
  fullName: Wpi.Proto.ProtobufTwist3d.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Protos/Generated/Geometry3D.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: MergeFrom
    path: ../Assets/QuestNav/Protos/Generated/Geometry3D.cs
    startLine: 1932
  assemblies:
  - QuestNav
  namespace: Wpi.Proto
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Wpi.Proto.ProtobufTwist3d.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: Wpi.Proto
  commentId: N:Wpi.Proto
  href: Wpi.html
  name: Wpi.Proto
  nameWithType: Wpi.Proto
  fullName: Wpi.Proto
  spec.csharp:
  - uid: Wpi
    name: Wpi
    href: Wpi.html
  - name: .
  - uid: Wpi.Proto
    name: Proto
    href: Wpi.Proto.html
  spec.vb:
  - uid: Wpi
    name: Wpi
    href: Wpi.html
  - name: .
  - uid: Wpi.Proto
    name: Proto
    href: Wpi.Proto.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}
  commentId: T:Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: Wpi.Proto.ProtobufTwist3d.html
  name: IMessage<ProtobufTwist3d>
  nameWithType: IMessage<ProtobufTwist3d>
  fullName: Google.Protobuf.IMessage<Wpi.Proto.ProtobufTwist3d>
  nameWithType.vb: IMessage(Of ProtobufTwist3d)
  fullName.vb: Google.Protobuf.IMessage(Of Wpi.Proto.ProtobufTwist3d)
  name.vb: IMessage(Of ProtobufTwist3d)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: System.IEquatable{Wpi.Proto.ProtobufTwist3d}
  commentId: T:System.IEquatable{Wpi.Proto.ProtobufTwist3d}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ProtobufTwist3d>
  nameWithType: IEquatable<ProtobufTwist3d>
  fullName: System.IEquatable<Wpi.Proto.ProtobufTwist3d>
  nameWithType.vb: IEquatable(Of ProtobufTwist3d)
  fullName.vb: System.IEquatable(Of Wpi.Proto.ProtobufTwist3d)
  name.vb: IEquatable(Of ProtobufTwist3d)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}
  commentId: T:Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: Wpi.Proto.ProtobufTwist3d.html
  name: IDeepCloneable<ProtobufTwist3d>
  nameWithType: IDeepCloneable<ProtobufTwist3d>
  fullName: Google.Protobuf.IDeepCloneable<Wpi.Proto.ProtobufTwist3d>
  nameWithType.vb: IDeepCloneable(Of ProtobufTwist3d)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Wpi.Proto.ProtobufTwist3d)
  name.vb: IDeepCloneable(Of ProtobufTwist3d)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.Parser*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Parser
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Parser
  name: Parser
  nameWithType: ProtobufTwist3d.Parser
  fullName: Wpi.Proto.ProtobufTwist3d.Parser
- uid: Google.Protobuf.MessageParser{Wpi.Proto.ProtobufTwist3d}
  commentId: T:Google.Protobuf.MessageParser{Wpi.Proto.ProtobufTwist3d}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: Wpi.Proto.ProtobufTwist3d.html
  name: MessageParser<ProtobufTwist3d>
  nameWithType: MessageParser<ProtobufTwist3d>
  fullName: Google.Protobuf.MessageParser<Wpi.Proto.ProtobufTwist3d>
  nameWithType.vb: MessageParser(Of ProtobufTwist3d)
  fullName.vb: Google.Protobuf.MessageParser(Of Wpi.Proto.ProtobufTwist3d)
  name.vb: MessageParser(Of ProtobufTwist3d)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.Descriptor*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Descriptor
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Descriptor
  name: Descriptor
  nameWithType: ProtobufTwist3d.Descriptor
  fullName: Wpi.Proto.ProtobufTwist3d.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: Wpi.Proto.ProtobufTwist3d.#ctor*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.#ctor
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d__ctor
  name: ProtobufTwist3d
  nameWithType: ProtobufTwist3d.ProtobufTwist3d
  fullName: Wpi.Proto.ProtobufTwist3d.ProtobufTwist3d
  nameWithType.vb: ProtobufTwist3d.New
  fullName.vb: Wpi.Proto.ProtobufTwist3d.New
  name.vb: New
- uid: Wpi.Proto.ProtobufTwist3d
  commentId: T:Wpi.Proto.ProtobufTwist3d
  parent: Wpi.Proto
  href: Wpi.Proto.ProtobufTwist3d.html
  name: ProtobufTwist3d
  nameWithType: ProtobufTwist3d
  fullName: Wpi.Proto.ProtobufTwist3d
- uid: Wpi.Proto.ProtobufTwist3d.Clone*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Clone
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Clone
  name: Clone
  nameWithType: ProtobufTwist3d.Clone
  fullName: Wpi.Proto.ProtobufTwist3d.Clone
- uid: Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}.Clone
  parent: Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<ProtobufTwist3d>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Wpi.Proto.ProtobufTwist3d>.Clone()
  nameWithType.vb: IDeepCloneable(Of ProtobufTwist3d).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Wpi.Proto.ProtobufTwist3d).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{Wpi.Proto.ProtobufTwist3d}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Wpi.Proto.ProtobufTwist3d.Dx*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Dx
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Dx
  name: Dx
  nameWithType: ProtobufTwist3d.Dx
  fullName: Wpi.Proto.ProtobufTwist3d.Dx
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Wpi.Proto.ProtobufTwist3d.Dy*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Dy
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Dy
  name: Dy
  nameWithType: ProtobufTwist3d.Dy
  fullName: Wpi.Proto.ProtobufTwist3d.Dy
- uid: Wpi.Proto.ProtobufTwist3d.Dz*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Dz
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Dz
  name: Dz
  nameWithType: ProtobufTwist3d.Dz
  fullName: Wpi.Proto.ProtobufTwist3d.Dz
- uid: Wpi.Proto.ProtobufTwist3d.Rx*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Rx
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Rx
  name: Rx
  nameWithType: ProtobufTwist3d.Rx
  fullName: Wpi.Proto.ProtobufTwist3d.Rx
- uid: Wpi.Proto.ProtobufTwist3d.Ry*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Ry
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Ry
  name: Ry
  nameWithType: ProtobufTwist3d.Ry
  fullName: Wpi.Proto.ProtobufTwist3d.Ry
- uid: Wpi.Proto.ProtobufTwist3d.Rz*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Rz
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Rz
  name: Rz
  nameWithType: ProtobufTwist3d.Rz
  fullName: Wpi.Proto.ProtobufTwist3d.Rz
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.Equals*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.Equals
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_Equals_System_Object_
  name: Equals
  nameWithType: ProtobufTwist3d.Equals
  fullName: Wpi.Proto.ProtobufTwist3d.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Wpi.Proto.ProtobufTwist3d}.Equals(Wpi.Proto.ProtobufTwist3d)
  commentId: M:System.IEquatable{Wpi.Proto.ProtobufTwist3d}.Equals(Wpi.Proto.ProtobufTwist3d)
  parent: System.IEquatable{Wpi.Proto.ProtobufTwist3d}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ProtobufTwist3d)
  nameWithType: IEquatable<ProtobufTwist3d>.Equals(ProtobufTwist3d)
  fullName: System.IEquatable<Wpi.Proto.ProtobufTwist3d>.Equals(Wpi.Proto.ProtobufTwist3d)
  nameWithType.vb: IEquatable(Of ProtobufTwist3d).Equals(ProtobufTwist3d)
  fullName.vb: System.IEquatable(Of Wpi.Proto.ProtobufTwist3d).Equals(Wpi.Proto.ProtobufTwist3d)
  spec.csharp:
  - uid: System.IEquatable{Wpi.Proto.ProtobufTwist3d}.Equals(Wpi.Proto.ProtobufTwist3d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Wpi.Proto.ProtobufTwist3d}.Equals(Wpi.Proto.ProtobufTwist3d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.GetHashCode*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.GetHashCode
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_GetHashCode
  name: GetHashCode
  nameWithType: ProtobufTwist3d.GetHashCode
  fullName: Wpi.Proto.ProtobufTwist3d.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.ToString*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.ToString
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_ToString
  name: ToString
  nameWithType: ProtobufTwist3d.ToString
  fullName: Wpi.Proto.ProtobufTwist3d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Wpi.Proto.ProtobufTwist3d.WriteTo*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.WriteTo
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_WriteTo_Google_Protobuf_CodedOutputStream_
  name: WriteTo
  nameWithType: ProtobufTwist3d.WriteTo
  fullName: Wpi.Proto.ProtobufTwist3d.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Wpi.Proto.ProtobufTwist3d.CalculateSize*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.CalculateSize
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_CalculateSize
  name: CalculateSize
  nameWithType: ProtobufTwist3d.CalculateSize
  fullName: Wpi.Proto.ProtobufTwist3d.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: Wpi.Proto.ProtobufTwist3d.MergeFrom*
  commentId: Overload:Wpi.Proto.ProtobufTwist3d.MergeFrom
  href: Wpi.Proto.ProtobufTwist3d.html#Wpi_Proto_ProtobufTwist3d_MergeFrom_Wpi_Proto_ProtobufTwist3d_
  name: MergeFrom
  nameWithType: ProtobufTwist3d.MergeFrom
  fullName: Wpi.Proto.ProtobufTwist3d.MergeFrom
- uid: Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  commentId: M:Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  parent: Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: Wpi.Proto.ProtobufTwist3d.html
  name: MergeFrom(ProtobufTwist3d)
  nameWithType: IMessage<ProtobufTwist3d>.MergeFrom(ProtobufTwist3d)
  fullName: Google.Protobuf.IMessage<Wpi.Proto.ProtobufTwist3d>.MergeFrom(Wpi.Proto.ProtobufTwist3d)
  nameWithType.vb: IMessage(Of ProtobufTwist3d).MergeFrom(ProtobufTwist3d)
  fullName.vb: Google.Protobuf.IMessage(Of Wpi.Proto.ProtobufTwist3d).MergeFrom(Wpi.Proto.ProtobufTwist3d)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}.MergeFrom(Wpi.Proto.ProtobufTwist3d)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{Wpi.Proto.ProtobufTwist3d}.MergeFrom(Wpi.Proto.ProtobufTwist3d)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Wpi.Proto.ProtobufTwist3d
    name: ProtobufTwist3d
    href: Wpi.Proto.ProtobufTwist3d.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
