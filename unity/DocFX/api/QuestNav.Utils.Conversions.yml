### YamlMime:ManagedReference
items:
- uid: QuestNav.Utils.Conversions
  commentId: T:QuestNav.Utils.Conversions
  id: Conversions
  parent: QuestNav.Utils
  children:
  - QuestNav.Utils.Conversions.FrcToUnity3d(Wpi.Proto.ProtobufPose3d)
  - QuestNav.Utils.Conversions.UnityToFrc3d(UnityEngine.Vector3,UnityEngine.Quaternion)
  langs:
  - csharp
  - vb
  name: Conversions
  nameWithType: Conversions
  fullName: QuestNav.Utils.Conversions
  type: Class
  source:
    remote:
      path: unity/Assets/QuestNav/Utils/Conversions.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: Conversions
    path: ../Assets/QuestNav/Utils/Conversions.cs
    startLine: 8
  assemblies:
  - QuestNav
  namespace: QuestNav.Utils
  summary: Provides utility methods for converting between FRC and Unity coordinate systems.
  example: []
  syntax:
    content: public static class Conversions
    content.vb: Public Module Conversions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: QuestNav.Utils.Conversions.FrcToUnity3d(Wpi.Proto.ProtobufPose3d)
  commentId: M:QuestNav.Utils.Conversions.FrcToUnity3d(Wpi.Proto.ProtobufPose3d)
  id: FrcToUnity3d(Wpi.Proto.ProtobufPose3d)
  parent: QuestNav.Utils.Conversions
  langs:
  - csharp
  - vb
  name: FrcToUnity3d(ProtobufPose3d)
  nameWithType: Conversions.FrcToUnity3d(ProtobufPose3d)
  fullName: QuestNav.Utils.Conversions.FrcToUnity3d(Wpi.Proto.ProtobufPose3d)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Utils/Conversions.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: FrcToUnity3d
    path: ../Assets/QuestNav/Utils/Conversions.cs
    startLine: 68
  assemblies:
  - QuestNav
  namespace: QuestNav.Utils
  summary: Converts from FRC coordinate system to Unity coordinate system.
  remarks: >-
    <table><thead><tr><th class="term">FRC Field Coordinates</th><th class="description">Unity World Coordinates</th></tr></thead><tbody><tr><td class="term">Origin: Blue alliance wall</td><td class="description">Origin: Arbitrary (set by VR tracking)</td></tr><tr><td class="term">X-axis: Points toward red</td><td class="description">X-axis: Points right</td></tr><tr><td class="term">Y-axis: Points left</td><td class="description">Y-axis: Points up</td></tr><tr><td class="term">Z-axis: Points up</td><td class="description">Z-axis: Points forward</td></tr><tr><td class="term">Rotation: Counter-clockwise</td><td class="description">Rotation: Clockwise (left-handed)</td></tr></tbody></table>


    <p><b>TRANSLATION MAPPING:</b><br />

    FRC X (forward) → Unity Z (forward)<br />

    FRC Y (left) → Unity -X (right becomes left)<br />

    FRC Z (up) → Unity Y (up)<br />

    FRC θ (CCW) → Unity -Y rotation (CW)

    </p>


    <p><b>ROTATION MAPPING:</b></p>

    <p>

    Converting rotation requires remapping the axes and accounting for the change in "handedness".

    A robot's primary rotation in FRC is yaw, which is a counter-clockwise rotation around the FRC Z-axis (up).

    In Unity, the equivalent rotation is yaw around Unity's Y-axis (up). However, Unity's left-handed system

    means positive rotation is clockwise. Therefore, the angle must be inverted.

    </p>

    <p>

    This transformation is accomplished by shuffling and negating the quaternion components:

    <pre><code class="lang-csharp">Unity.x =  FRC.y

    Unity.y = -FRC.z

    Unity.z = -FRC.x

    Unity.w =  FRC.w</code></pre>

    This correctly maps the rotation from FRC's right-handed, Z-up frame to Unity's left-handed, Y-up frame.

    </p>
  example: []
  syntax:
    content: public static (Vector3 position, Quaternion rotation) FrcToUnity3d(ProtobufPose3d targetPose3d)
    parameters:
    - id: targetPose3d
      type: Wpi.Proto.ProtobufPose3d
      description: Target position in FRC coordinates (meters, radians)
    return:
      type: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}
      description: Position and rotation in Unity coordinate system
    content.vb: Public Shared Function FrcToUnity3d(targetPose3d As ProtobufPose3d) As (position As Vector3, rotation As Quaternion)
  overload: QuestNav.Utils.Conversions.FrcToUnity3d*
- uid: QuestNav.Utils.Conversions.UnityToFrc3d(UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:QuestNav.Utils.Conversions.UnityToFrc3d(UnityEngine.Vector3,UnityEngine.Quaternion)
  id: UnityToFrc3d(UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: QuestNav.Utils.Conversions
  langs:
  - csharp
  - vb
  name: UnityToFrc3d(Vector3, Quaternion)
  nameWithType: Conversions.UnityToFrc3d(Vector3, Quaternion)
  fullName: QuestNav.Utils.Conversions.UnityToFrc3d(UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    remote:
      path: unity/Assets/QuestNav/Utils/Conversions.cs
      branch: Andy/Pose3d
      repo: git@github.com:STMARobotics/QuestNav.git
    id: UnityToFrc3d
    path: ../Assets/QuestNav/Utils/Conversions.cs
    startLine: 159
  assemblies:
  - QuestNav
  namespace: QuestNav.Utils
  summary: Converts a pose from the Unity world coordinate system to the FRC field coordinate system.
  remarks: >-
    <p>

    This method performs the inverse of <code>FrcToUnity3d</code>. It is primarily used to send data,

    such as a VR headset's pose, back to the robot in the coordinate system it understands.

    </p>

    <p><b>COORDINATE SYSTEM DIFFERENCES:</b></p>

    <table><thead><tr><th class="term">Unity World Coordinates (Left-Handed, Y-up)</th><th class="description">FRC Field Coordinates (Right-Handed, Z-up)</th></tr></thead><tbody><tr><td class="term">Origin: Arbitrary (set by VR tracking)</td><td class="description">Origin: Blue alliance wall</td></tr><tr><td class="term">X-axis: Points right</td><td class="description">X-axis: Points toward red alliance (forward)</td></tr><tr><td class="term">Y-axis: Points up</td><td class="description">Y-axis: Points left</td></tr><tr><td class="term">Z-axis: Points forward</td><td class="description">Z-axis: Points up</td></tr><tr><td class="term">Rotation: Clockwise (CW) positive</td><td class="description">Rotation: Counter-clockwise (CCW) positive</td></tr></tbody></table>


    <p><b>TRANSLATION MAPPING:</b><br />

    Unity Z (forward) → FRC X (forward)<br />

    Unity X (right)   → FRC -Y (left)<br />

    Unity Y (up)      → FRC Z (up)

    </p>


    <p><b>ROTATION MAPPING:</b></p>

    <p>

    To convert rotation from Unity back to FRC, the axes are remapped and the change in "handedness" is reversed.

    Unity's primary yaw rotation occurs around its Y-axis (up) in a clockwise direction. This is converted

    back to the FRC standard of yaw around its Z-axis (up) in a counter-clockwise direction.

    </p>

    <p>

    This inverse transformation is accomplished by the reverse quaternion component shuffle:

    <pre><code class="lang-csharp">FRC.x = -Unity.z

    FRC.y =  Unity.x

    FRC.z = -Unity.y

    FRC.w =  Unity.w</code></pre>

    This correctly maps the rotation from Unity's left-handed, Y-up frame back to FRC's right-handed, Z-up frame.

    </p>

    <p>

    USAGE:

    Called 100 times per second to stream headset position to robot.

    The robot uses this data for autonomous navigation, driver assistance,

    or any other functionality that needs to know where the driver is looking.

    </p>
  example: []
  syntax:
    content: public static ProtobufPose3d UnityToFrc3d(Vector3 unityPosition, Quaternion unityRotation)
    parameters:
    - id: unityPosition
      type: UnityEngine.Vector3
      description: VR headset position in Unity world coordinates
    - id: unityRotation
      type: UnityEngine.Quaternion
      description: VR headset orientation in Unity world coordinates
    return:
      type: Wpi.Proto.ProtobufPose3d
      description: 2D pose in FRC field coordinates (meters, radians)
    content.vb: Public Shared Function UnityToFrc3d(unityPosition As Vector3, unityRotation As Quaternion) As ProtobufPose3d
  overload: QuestNav.Utils.Conversions.UnityToFrc3d*
references:
- uid: QuestNav.Utils
  commentId: N:QuestNav.Utils
  href: QuestNav.html
  name: QuestNav.Utils
  nameWithType: QuestNav.Utils
  fullName: QuestNav.Utils
  spec.csharp:
  - uid: QuestNav
    name: QuestNav
    href: QuestNav.html
  - name: .
  - uid: QuestNav.Utils
    name: Utils
    href: QuestNav.Utils.html
  spec.vb:
  - uid: QuestNav
    name: QuestNav
    href: QuestNav.html
  - name: .
  - uid: QuestNav.Utils
    name: Utils
    href: QuestNav.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: QuestNav.Utils.Conversions.FrcToUnity3d*
  commentId: Overload:QuestNav.Utils.Conversions.FrcToUnity3d
  href: QuestNav.Utils.Conversions.html#QuestNav_Utils_Conversions_FrcToUnity3d_Wpi_Proto_ProtobufPose3d_
  name: FrcToUnity3d
  nameWithType: Conversions.FrcToUnity3d
  fullName: QuestNav.Utils.Conversions.FrcToUnity3d
- uid: Wpi.Proto.ProtobufPose3d
  commentId: T:Wpi.Proto.ProtobufPose3d
  parent: Wpi.Proto
  href: Wpi.Proto.ProtobufPose3d.html
  name: ProtobufPose3d
  nameWithType: ProtobufPose3d
  fullName: Wpi.Proto.ProtobufPose3d
- uid: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}
  commentId: T:System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-unityengine.vector3,unityengine.quaternion-.position
  name: (Vector3 position, Quaternion rotation)
  nameWithType: (Vector3 position, Quaternion rotation)
  fullName: (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
  nameWithType.vb: (position As Vector3, rotation As Quaternion)
  fullName.vb: (position As UnityEngine.Vector3, rotation As UnityEngine.Quaternion)
  name.vb: (position As Vector3, rotation As Quaternion)
  spec.csharp:
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}.position
    name: position
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-unityengine.vector3,unityengine.quaternion-.position
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}.rotation
    name: rotation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-unityengine.vector3,unityengine.quaternion-.rotation
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}.position
    name: position
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-unityengine.vector3,unityengine.quaternion-.position
  - name: " "
  - name: As
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{UnityEngine.Vector3,UnityEngine.Quaternion}.rotation
    name: rotation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-unityengine.vector3,unityengine.quaternion-.rotation
  - name: " "
  - name: As
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: Wpi.Proto
  commentId: N:Wpi.Proto
  href: Wpi.html
  name: Wpi.Proto
  nameWithType: Wpi.Proto
  fullName: Wpi.Proto
  spec.csharp:
  - uid: Wpi
    name: Wpi
    href: Wpi.html
  - name: .
  - uid: Wpi.Proto
    name: Proto
    href: Wpi.Proto.html
  spec.vb:
  - uid: Wpi
    name: Wpi
    href: Wpi.html
  - name: .
  - uid: Wpi.Proto
    name: Proto
    href: Wpi.Proto.html
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: QuestNav.Utils.Conversions.UnityToFrc3d*
  commentId: Overload:QuestNav.Utils.Conversions.UnityToFrc3d
  href: QuestNav.Utils.Conversions.html#QuestNav_Utils_Conversions_UnityToFrc3d_UnityEngine_Vector3_UnityEngine_Quaternion_
  name: UnityToFrc3d
  nameWithType: Conversions.UnityToFrc3d
  fullName: QuestNav.Utils.Conversions.UnityToFrc3d
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
