// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: commands.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace QuestNav.Protos.Generated {

  /// <summary>Holder for reflection information generated from commands.proto</summary>
  public static partial class CommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for commands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jb21tYW5kcy5wcm90bxIYcXVlc3RuYXYucHJvdG9zLmNvbW1hbmRzGhBn",
            "ZW9tZXRyeTNkLnByb3RvIlIKIFByb3RvYnVmUXVlc3ROYXZQb3NlUmVzZXRQ",
            "YXlsb2FkEi4KC3RhcmdldF9wb3NlGAEgASgLMhkud3BpLnByb3RvLlByb3Rv",
            "YnVmUG9zZTNkIs8BChdQcm90b2J1ZlF1ZXN0TmF2Q29tbWFuZBI7CgR0eXBl",
            "GAEgASgOMi0ucXVlc3RuYXYucHJvdG9zLmNvbW1hbmRzLlF1ZXN0TmF2Q29t",
            "bWFuZFR5cGUSEgoKY29tbWFuZF9pZBgCIAEoDRJYChJwb3NlX3Jlc2V0X3Bh",
            "eWxvYWQYCiABKAsyOi5xdWVzdG5hdi5wcm90b3MuY29tbWFuZHMuUHJvdG9i",
            "dWZRdWVzdE5hdlBvc2VSZXNldFBheWxvYWRIAEIJCgdwYXlsb2FkIl0KH1By",
            "b3RvYnVmUXVlc3ROYXZDb21tYW5kUmVzcG9uc2USEgoKY29tbWFuZF9pZBgB",
            "IAEoDRIPCgdzdWNjZXNzGAIgASgIEhUKDWVycm9yX21lc3NhZ2UYAyABKAkq",
            "QwoTUXVlc3ROYXZDb21tYW5kVHlwZRIcChhDT01NQU5EX1RZUEVfVU5TUEVD",
            "SUZJRUQQABIOCgpQT1NFX1JFU0VUEAFCQwolZ2cucXVlc3RuYXYucXVlc3Ru",
            "YXYucHJvdG9zLmdlbmVyYXRlZKoCGVF1ZXN0TmF2LlByb3Rvcy5HZW5lcmF0",
            "ZWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Wpi.Proto.Geometry3DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::QuestNav.Protos.Generated.QuestNavCommandType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload), global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload.Parser, new[]{ "TargetPose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QuestNav.Protos.Generated.ProtobufQuestNavCommand), global::QuestNav.Protos.Generated.ProtobufQuestNavCommand.Parser, new[]{ "Type", "CommandId", "PoseResetPayload" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QuestNav.Protos.Generated.ProtobufQuestNavCommandResponse), global::QuestNav.Protos.Generated.ProtobufQuestNavCommandResponse.Parser, new[]{ "CommandId", "Success", "ErrorMessage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///*
  /// Enumeration of available command types in the QuestNav system.
  /// 
  /// This enum defines all the different types of commands that can be sent to
  /// the Quest headset. The enum is designed to be extensible - new command types
  /// can be added without breaking existing clients.
  /// 
  /// Design Notes:
  /// - Values start from 0 as required by proto3
  /// - UNSPECIFIED value (0) is reserved for error handling
  /// - Command values should be assigned incrementally for clarity
  /// </summary>
  public enum QuestNavCommandType {
    /// <summary>
    /// Default/invalid command type (required by proto3)
    /// </summary>
    [pbr::OriginalName("COMMAND_TYPE_UNSPECIFIED")] CommandTypeUnspecified = 0,
    /// <summary>
    ///*
    /// POSE_RESET: Resets the robot's pose estimation to a specified target pose.
    /// 
    /// This command is used to correct drift in the tracking system by setting
    /// the robot's position and orientation to known values. Typically used when
    /// the robot is placed at a known location on the field.
    /// 
    /// Requires: ProtobufQuestNavPoseResetPayload
    /// </summary>
    [pbr::OriginalName("POSE_RESET")] PoseReset = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///*
  /// Payload message for the POSE_RESET command.
  /// 
  /// This message contains the data needed to execute a pose reset operation.
  /// The pose reset command allows external systems to correct the Quest's
  /// understanding of the robot's position and orientation on the field.
  /// 
  /// Coordinate System:
  /// - Uses WPILib field-relative coordinate system
  /// - X-axis: Forward (towards opposing alliance)
  /// - Y-axis: Left (when facing forward)
  /// - Z-axis: Up
  /// - Yaw (Z): Counter-clockwise (right-handed) rotation around the Z axis
  /// - Pitch (Y): Counter-clockwise (right-handed) rotation around Y axis
  /// - Roll (X): Counter-clockwise (right-handed) rotation around the X axis
  /// - Rotation: Counter-clockwise positive (right-hand coordinate system)
  /// - Origin: Typically at one corner of the field (see field layout documentation)
  /// </summary>
  public sealed partial class ProtobufQuestNavPoseResetPayload : pb::IMessage<ProtobufQuestNavPoseResetPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufQuestNavPoseResetPayload> _parser = new pb::MessageParser<ProtobufQuestNavPoseResetPayload>(() => new ProtobufQuestNavPoseResetPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufQuestNavPoseResetPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QuestNav.Protos.Generated.CommandsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavPoseResetPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavPoseResetPayload(ProtobufQuestNavPoseResetPayload other) : this() {
      targetPose_ = other.targetPose_ != null ? other.targetPose_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavPoseResetPayload Clone() {
      return new ProtobufQuestNavPoseResetPayload(this);
    }

    /// <summary>Field number for the "target_pose" field.</summary>
    public const int TargetPoseFieldNumber = 1;
    private global::Wpi.Proto.ProtobufPose3d targetPose_;
    /// <summary>
    ///*
    /// The target pose to reset the robot to.
    /// 
    /// This should represent the robot's actual position and orientation on the field
    /// in the WPILib coordinate system. The Quest will update its internal tracking
    /// to match this pose, effectively correcting any accumulated drift.
    /// 
    /// Units:
    /// - Translation: meters
    /// - Rotation: radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufPose3d TargetPose {
      get { return targetPose_; }
      set {
        targetPose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufQuestNavPoseResetPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufQuestNavPoseResetPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TargetPose, other.TargetPose)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (targetPose_ != null) hash ^= TargetPose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetPose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetPose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetPose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetPose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (targetPose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetPose);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufQuestNavPoseResetPayload other) {
      if (other == null) {
        return;
      }
      if (other.targetPose_ != null) {
        if (targetPose_ == null) {
          TargetPose = new global::Wpi.Proto.ProtobufPose3d();
        }
        TargetPose.MergeFrom(other.TargetPose);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (targetPose_ == null) {
              TargetPose = new global::Wpi.Proto.ProtobufPose3d();
            }
            input.ReadMessage(TargetPose);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (targetPose_ == null) {
              TargetPose = new global::Wpi.Proto.ProtobufPose3d();
            }
            input.ReadMessage(TargetPose);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Main command message sent to the QuestNav system.
  /// 
  /// This is the primary message type used to send commands from external systems
  /// (like robot code) to the Quest headset. Each command includes a type identifier,
  /// a unique tracking ID, and optional payload data specific to the command type.
  /// 
  /// The command system is designed for asynchronous operation - commands are sent
  /// and responses are received separately, matched by the command_id field.
  /// 
  /// Message Flow:
  /// 1. Client creates command with unique command_id
  /// 2. Client sets appropriate type and payload
  /// 3. Client sends command to Quest
  /// 4. Quest processes command and sends response with matching command_id
  /// </summary>
  public sealed partial class ProtobufQuestNavCommand : pb::IMessage<ProtobufQuestNavCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufQuestNavCommand> _parser = new pb::MessageParser<ProtobufQuestNavCommand>(() => new ProtobufQuestNavCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufQuestNavCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QuestNav.Protos.Generated.CommandsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommand(ProtobufQuestNavCommand other) : this() {
      type_ = other.type_;
      commandId_ = other.commandId_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.PoseResetPayload:
          PoseResetPayload = other.PoseResetPayload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommand Clone() {
      return new ProtobufQuestNavCommand(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::QuestNav.Protos.Generated.QuestNavCommandType type_ = global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified;
    /// <summary>
    ///*
    /// The type of command being sent.
    /// 
    /// This field determines which payload (if any) should be populated and
    /// how the Quest should process the command. See QuestNavCommandType
    /// enum for available command types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::QuestNav.Protos.Generated.QuestNavCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 2;
    private uint commandId_;
    /// <summary>
    ///*
    /// Unique identifier for this command instance.
    /// 
    /// This ID is used to match commands with their responses in asynchronous
    /// communication. The client should generate unique IDs for each command
    /// to avoid confusion. The Quest will echo this ID in the response message.
    /// 
    /// Recommended: Use incrementing integers or timestamps for uniqueness.
    /// 
    /// Note: For FRC users, the vendor dependency will handle this automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "pose_reset_payload" field.</summary>
    public const int PoseResetPayloadFieldNumber = 10;
    /// <summary>
    ///*
    /// Payload for POSE_RESET commands.
    /// Set this field when type = POSE_RESET.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload PoseResetPayload {
      get { return payloadCase_ == PayloadOneofCase.PoseResetPayload ? (global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PoseResetPayload;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      PoseResetPayload = 10,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufQuestNavCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufQuestNavCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (CommandId != other.CommandId) return false;
      if (!object.Equals(PoseResetPayload, other.PoseResetPayload)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified) hash ^= Type.GetHashCode();
      if (CommandId != 0) hash ^= CommandId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PoseResetPayload) hash ^= PoseResetPayload.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (CommandId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CommandId);
      }
      if (payloadCase_ == PayloadOneofCase.PoseResetPayload) {
        output.WriteRawTag(82);
        output.WriteMessage(PoseResetPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (CommandId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CommandId);
      }
      if (payloadCase_ == PayloadOneofCase.PoseResetPayload) {
        output.WriteRawTag(82);
        output.WriteMessage(PoseResetPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (CommandId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CommandId);
      }
      if (payloadCase_ == PayloadOneofCase.PoseResetPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoseResetPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufQuestNavCommand other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::QuestNav.Protos.Generated.QuestNavCommandType.CommandTypeUnspecified) {
        Type = other.Type;
      }
      if (other.CommandId != 0) {
        CommandId = other.CommandId;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.PoseResetPayload:
          if (PoseResetPayload == null) {
            PoseResetPayload = new global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload();
          }
          PoseResetPayload.MergeFrom(other.PoseResetPayload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::QuestNav.Protos.Generated.QuestNavCommandType) input.ReadEnum();
            break;
          }
          case 16: {
            CommandId = input.ReadUInt32();
            break;
          }
          case 82: {
            global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload subBuilder = new global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload();
            if (payloadCase_ == PayloadOneofCase.PoseResetPayload) {
              subBuilder.MergeFrom(PoseResetPayload);
            }
            input.ReadMessage(subBuilder);
            PoseResetPayload = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::QuestNav.Protos.Generated.QuestNavCommandType) input.ReadEnum();
            break;
          }
          case 16: {
            CommandId = input.ReadUInt32();
            break;
          }
          case 82: {
            global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload subBuilder = new global::QuestNav.Protos.Generated.ProtobufQuestNavPoseResetPayload();
            if (payloadCase_ == PayloadOneofCase.PoseResetPayload) {
              subBuilder.MergeFrom(PoseResetPayload);
            }
            input.ReadMessage(subBuilder);
            PoseResetPayload = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Response message sent back after processing a command.
  /// 
  /// This message is sent by the Quest back to the client after processing
  /// a ProtobufQuestNavCommand. It provides status information about whether
  /// the command was executed successfully and any error details if it failed.
  /// 
  /// The response is matched to the original command using the command_id field,
  /// allowing for proper asynchronous command handling even when multiple
  /// commands are in flight simultaneously.
  /// 
  /// Response Timing:
  /// - Responses are sent after command processing completes
  /// - Some commands may take time to execute (e.g., pose reset with validation)
  /// - Clients should implement timeouts for command responses
  /// 
  /// Note: For FRC users, the vendor dependency will handle response matching automatically.
  /// </summary>
  public sealed partial class ProtobufQuestNavCommandResponse : pb::IMessage<ProtobufQuestNavCommandResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufQuestNavCommandResponse> _parser = new pb::MessageParser<ProtobufQuestNavCommandResponse>(() => new ProtobufQuestNavCommandResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufQuestNavCommandResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QuestNav.Protos.Generated.CommandsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommandResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommandResponse(ProtobufQuestNavCommandResponse other) : this() {
      commandId_ = other.commandId_;
      success_ = other.success_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufQuestNavCommandResponse Clone() {
      return new ProtobufQuestNavCommandResponse(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private uint commandId_;
    /// <summary>
    ///*
    /// Command ID that matches the original command.
    /// 
    /// This field echoes the command_id from the original ProtobufQuestNavCommand
    /// that this response corresponds to. Clients use this to match responses
    /// with their original commands in asynchronous communication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    ///*
    /// Indicates whether the command was executed successfully.
    /// 
    /// true:  Command completed successfully
    /// false: Command failed (see error_message for details)
    /// 
    /// Note: A successful response means the command was processed, but doesn't
    /// necessarily guarantee the desired outcome (e.g., pose reset might succeed
    /// but tracking could still be poor due to environmental conditions).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    ///*
    /// Human-readable error message when success = false.
    /// 
    /// This field provides detailed information about why a command failed.
    /// It should be empty or ignored when success = true.
    /// 
    /// Error messages are intended for debugging and logging purposes.
    /// They may include technical details about the failure cause.
    /// 
    /// Examples:
    /// - "Invalid pose coordinates: x value out of field bounds"
    /// - "Tracking system not initialized"
    /// - "Unknown command type"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufQuestNavCommandResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufQuestNavCommandResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (Success != other.Success) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0) hash ^= CommandId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommandId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CommandId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommandId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CommandId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CommandId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufQuestNavCommandResponse other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0) {
        CommandId = other.CommandId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadUInt32();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommandId = input.ReadUInt32();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
